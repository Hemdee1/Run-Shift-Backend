datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email             String  @unique
  companyName       String
  managersFirstName String
  managersLastName  String
  password          String
  verified          Boolean @default(false)
  staffs            Staff[]
  shifts            Shift[]
}

model Staff {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  email     String   @unique
  firstName String
  lastName  String
  password  String
  role      String

  companyId String
  company   Company @relation(fields: [companyId], references: [id])
  shifts    Shift[]
  posts     Post[]
  chats     Chat[]
}

model Post {
  id         String   @id @default(uuid())
  title      String
  content    String?
  createdAt  DateTime @default(now())
  authorId   String
  author     Staff    @relation(fields: [authorId], references: [id])
  chats      Chat[]
}

model Chat {
  id        String   @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  staffId   String
  staff     Staff    @relation(fields: [staffId], references: [id])
}

model Notification {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  notification String
}

model Shift {
  id           String   @id @default(uuid())
  date         String
  description         String[] @default([])
  staffId   String
  companyId String 
  staff     Staff   @relation(fields: [staffId], references: [id])
  company   Company @relation(fields: [companyId], references: [id])
}


model ImageUrl {
  id        String   @id @default(uuid())
  url       String
  publicId  String   @unique
 created_at String
  email     String
  bytes Int
}
